// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pharmaceutical.DataAccess;

namespace Pharmaceutical.DAL.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pharmaceutical.Common.Models.ContractDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AssignedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("AssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<string>("ContractName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCompanyApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVendorContractApproved")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ContractDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApprovedDate = new DateTime(2021, 8, 19, 22, 11, 16, 163, DateTimeKind.Local).AddTicks(2162),
                            AssignedBy = "ToddPharmaceutical",
                            ContractId = 101,
                            ContractName = "Contract101",
                            IsCompanyApproved = true,
                            IsVendorContractApproved = false
                        },
                        new
                        {
                            Id = 2,
                            AssignedBy = "ToddPharmaceutical",
                            ContractId = 101,
                            ContractName = "Contract101",
                            IsCompanyApproved = false,
                            IsVendorContractApproved = false
                        },
                        new
                        {
                            Id = 3,
                            ApprovedDate = new DateTime(2021, 8, 18, 22, 11, 16, 165, DateTimeKind.Local).AddTicks(3822),
                            AssignedBy = "ToddPharmaceutical",
                            AssignedDate = new DateTime(2021, 8, 19, 22, 11, 16, 165, DateTimeKind.Local).AddTicks(4152),
                            ContractId = 102,
                            ContractName = "Contract102",
                            IsCompanyApproved = true,
                            IsVendorContractApproved = true
                        },
                        new
                        {
                            Id = 4,
                            AssignedBy = "ToddPharmaceutical",
                            ContractId = 102,
                            ContractName = "Contract102",
                            IsCompanyApproved = false,
                            IsVendorContractApproved = false
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
